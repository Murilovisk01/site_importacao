MANUAL DE COMANDOS DJANGO - manage.py
=====================================

üî∞ IN√çCIO R√ÅPIDO
----------------
Criar um novo projeto Django:
    django-admin startproject nome_do_projeto

Criar um novo app dentro do projeto:
    python manage.py startapp nome_do_app


üöÄ SERVIDOR DE DESENVOLVIMENTO
-------------------------------
Iniciar o servidor local:
    python manage.py runserver

Iniciar com porta customizada:
    python manage.py runserver 8080


üß± BANCO DE DADOS
------------------
Criar migra√ß√µes com base nos models:
    python manage.py makemigrations

Aplicar as migra√ß√µes no banco:
    python manage.py migrate

Ver hist√≥rico de migra√ß√µes:
    python manage.py showmigrations


üõ†Ô∏è USU√ÅRIOS E ADMIN
---------------------
Criar um superusu√°rio (para acessar /admin):
    python manage.py createsuperuser


üß™ TESTES E DEBUG
------------------
Abrir shell interativo com contexto do Django:
    python manage.py shell

Rodar os testes:
    python manage.py test

Ver todos os comandos dispon√≠veis:
    python manage.py help


üßπ LIMPEZA E UTILIDADES
------------------------
Apagar dados do banco (mas manter estrutura):
    python manage.py flush
    ‚ö†Ô∏è Isso apaga todos os dados e pede confirma√ß√£o.

Checar erros no projeto:
    python manage.py check


üîå OUTROS COMANDOS √öTEIS
--------------------------
Exportar depend√™ncias do projeto:
    pip freeze > requirements.txt

Instalar depend√™ncias de um requirements.txt:
    pip install -r requirements.txt



Passo a passo: Subir um Projeto Django em Servidor Windows

1. Instalar o Python
Baixe e instale o Python mais recente (recomendado 3.12.x ou compat√≠vel):
https://www.python.org/downloads/
Durante a instala√ß√£o, marque a op√ß√£o:
Add Python to PATH.

2. Instalar e Configurar Banco de Dados
Caso seu projeto use PostgreSQL, MySQL, ou SQL Server, instale o banco correspondente e crie o banco e usu√°rio necess√°rios para o projeto.

3. Preparar o Projeto Django
Copie seu projeto para uma pasta espec√≠fica, exemplo:
C:\projetos\meu_projeto

Criar Ambiente Virtual
No prompt execute:
cd C:\projetos\meu_projeto
python -m venv venv
venv\Scripts\activate

Instalar depend√™ncias
pip install -r requirements.txt

4. Configura√ß√£o do Projeto
settings.py:
ALLOWED_HOSTS = ['ip-do-servidor', 'dominio.com']
Banco de Dados configurado corretamente
Arquivos est√°ticos:
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

python manage.py collectstatic

5. Testar o Projeto
python manage.py migrate
python manage.py runserver 0.0.0.0:8000

Navegador: http://ip-do-servidor:8000

6. Instalar IIS e configurar IIS para Django
Ativar IIS pelo Painel de Controle do Windows
Instalar wfastcgi:
pip install wfastcgi
wfastcgi-enable

Configurar IIS Manager:
Adicione m√≥dulo FastCGI com execut√°vel:
C:\projetos\meu_projeto\venv\Scripts\python.exe|C:\projetos\meu_projeto\venv\Lib\site-packages\wfastcgi.py

7. Configurar Vari√°veis do IIS para Django
No IIS > Configura√ß√µes do Aplicativo:
DJANGO_SETTINGS_MODULE: nome_projeto.settings
WSGI_HANDLER: django.core.wsgi.get_wsgi_application()
PYTHONPATH: C:\projetos\meu_projeto

8. Reiniciar IIS e Testar
iisreset

No navegador:
http://ip-do-servidor

Seu projeto Django agora est√° rodando com sucesso no Windows Server!
